import{_ as s,p as n,q as r,s as a,R as e,t as l,Z as i,n as d}from"./framework-47a2e622.js";const o={},p=a("h2",{id:"简介",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),e(" 简介")],-1),c=a("p",null,"LinkFinder 是一个 python 脚本，用于在 JavaScript 文件中发现端点及其参数。",-1),h=a("h2",{id:"下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#下载","aria-hidden":"true"},"#"),e(" 下载")],-1),u={href:"https://github.com/GerbenJavado/LinkFinder",target:"_blank",rel:"noopener noreferrer"},k=i(`<p>使用 kali 下载：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/GerbenJavado/LinkFinder.git
<span class="token builtin class-name">cd</span> LinkFinder
python setup.py <span class="token function">install</span>
</code></pre></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip3 <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt
</code></pre></div><h2 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h2><table><thead><tr><th>Short Form</th><th>Long Form</th><th>Description</th></tr></thead><tbody><tr><td>-i</td><td>--input</td><td>Input a: URL, file or folder. For folders a wildcard can be used (e.g. &#39;/*.js&#39;).</td></tr><tr><td>-o</td><td>--output</td><td>&quot;cli&quot; to print to STDOUT, otherwise where to save the HTML file Default: output.html</td></tr><tr><td>-r</td><td>--regex</td><td>RegEx for filtering purposes against found endpoints (e.g. ^/api/)</td></tr><tr><td>-d</td><td>--domain</td><td>Toggle to use when analyzing an entire domain. Enumerates over all found JS files.</td></tr><tr><td>-b</td><td>--burp</td><td>Toggle to use when inputting a Burp &#39;Save selected&#39; file containing multiple JS files</td></tr><tr><td>-c</td><td>--cookies</td><td>Add cookies to the request</td></tr><tr><td>-h</td><td>--help</td><td>show the help message and exit</td></tr></tbody></table><h2 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例" aria-hidden="true">#</a> 使用示例</h2><ul><li>在线 JavaScript 文件中查找端点并将 HTML 结果输出到 results.HTML</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python linkfinder.py <span class="token parameter variable">-i</span> https://example.com/1.js <span class="token parameter variable">-o</span> results.html
</code></pre></div><ul><li>CLI/STDOUT 输出（不使用js美化程序，加快速度）</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python linkfinder.py <span class="token parameter variable">-i</span> https://example.com/1.js <span class="token parameter variable">-o</span> cli
</code></pre></div><ul><li>分析整个域及其 JS 文件</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python linkfinder.py <span class="token parameter variable">-i</span> https://example.com <span class="token parameter variable">-d</span>
</code></pre></div><ul><li>Burp 输入（在目标中选择要保存的文件，右键单击“保存所选项目”，将该文件作为输入）</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python linkfinder.py <span class="token parameter variable">-i</span> burpfile <span class="token parameter variable">-b</span>
</code></pre></div><ul><li>枚举 JavaScript 文件的整个文件夹，同时查找以 /api/ 开头的端点，最后将结果保存到 results.html</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python linkfinder.py <span class="token parameter variable">-i</span> <span class="token string">&#39;Desktop/*.js&#39;</span> <span class="token parameter variable">-r</span> ^/api/ <span class="token parameter variable">-o</span> results.html
</code></pre></div><h2 id="docker-部署" tabindex="-1"><a class="header-anchor" href="#docker-部署" aria-hidden="true">#</a> Docker 部署</h2><p>搭建镜像：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> build <span class="token parameter variable">-t</span> linkfinder
</code></pre></div><p>启动容器：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">--rm</span> <span class="token parameter variable">-v</span> <span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">pwd</span><span class="token variable">)</span></span>:/linkfinder/output linkfinder <span class="token parameter variable">-i</span> http://example.com/1.js <span class="token parameter variable">-o</span> /linkfinder/output/output.html
</code></pre></div>`,22),g=a("div",{class:"custom-container warning"},[a("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[a("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[a("circle",{cx:"12",cy:"12",r:"9"}),a("path",{d:"M12 8v4"}),a("path",{d:"M12 16h.01"})])]),a("p",{class:"custom-container-title"},"注意"),a("p",null,[e("请确保在输出路径中使用路径"),a("code",null,"/linkfinder/output"),e("，否则容器退出时输出将丢失。")])],-1);function b(m,v){const t=d("ExternalLinkIcon");return n(),r("div",null,[p,c,h,a("p",null,[a("a",u,[e("https://github.com/GerbenJavado/LinkFinder"),l(t)])]),k,g])}const x=s(o,[["render",b],["__file","LinkFinder.html.vue"]]);export{x as default};
