import{_ as n,p as t,q as s,Z as a}from"./framework-47a2e622.js";const e={},p=a(`<h2 id="json-数据解析" tabindex="-1"><a class="header-anchor" href="#json-数据解析" aria-hidden="true">#</a> JSON 数据解析</h2><p>Python3 中可以使用 json 模块来对 JSON 数据进行编解码，它包含了两个函数：</p><ul><li><code>json.dumps()</code>: 对数据进行编码。</li><li><code>json.loads()</code>: 对数据进行解码。</li></ul><h2 id="python-编码为-json-类型转换对应表" tabindex="-1"><a class="header-anchor" href="#python-编码为-json-类型转换对应表" aria-hidden="true">#</a> Python 编码为 JSON 类型转换对应表</h2><table><thead><tr><th style="text-align:center;">Python</th><th style="text-align:center;">JSON</th></tr></thead><tbody><tr><td style="text-align:center;">dict</td><td style="text-align:center;">object</td></tr><tr><td style="text-align:center;">list, tuple</td><td style="text-align:center;">array</td></tr><tr><td style="text-align:center;">str</td><td style="text-align:center;">string</td></tr><tr><td style="text-align:center;">int, float, int- &amp; float-derived Enums</td><td style="text-align:center;">number</td></tr><tr><td style="text-align:center;">True</td><td style="text-align:center;">true</td></tr><tr><td style="text-align:center;">False</td><td style="text-align:center;">false</td></tr><tr><td style="text-align:center;">None</td><td style="text-align:center;">null</td></tr></tbody></table><h2 id="json-解码为-python-类型转换对应表" tabindex="-1"><a class="header-anchor" href="#json-解码为-python-类型转换对应表" aria-hidden="true">#</a> JSON 解码为 Python 类型转换对应表</h2><table><thead><tr><th style="text-align:center;">JSON</th><th style="text-align:center;">Python</th></tr></thead><tbody><tr><td style="text-align:center;">object</td><td style="text-align:center;">dict</td></tr><tr><td style="text-align:center;">array</td><td style="text-align:center;">list</td></tr><tr><td style="text-align:center;">string</td><td style="text-align:center;">str</td></tr><tr><td style="text-align:center;">number (int)</td><td style="text-align:center;">int</td></tr><tr><td style="text-align:center;">number (real)</td><td style="text-align:center;">Float</td></tr><tr><td style="text-align:center;">true</td><td style="text-align:center;">True</td></tr><tr><td style="text-align:center;">false</td><td style="text-align:center;">False</td></tr><tr><td style="text-align:center;">null</td><td style="text-align:center;">None</td></tr></tbody></table><h2 id="代码" tabindex="-1"><a class="header-anchor" href="#代码" aria-hidden="true">#</a> 代码</h2><p>Python 数据结构转换为 JSON：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>
<span class="token keyword">import</span> json
<span class="token comment"># Python 字典类型转换为 JSON 对象</span>
data <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;no&#39;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;name&#39;</span> <span class="token punctuation">:</span> <span class="token string">&#39;W3CSchool&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;url&#39;</span> <span class="token punctuation">:</span> <span class="token string">&#39;http://www.w3cschool.cn&#39;</span>
<span class="token punctuation">}</span>
json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;Python 原始数据：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">repr</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span>	<span class="token comment">#repr()函数将对象转化为供解释器读取的形式</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;JSON 对象：&quot;</span><span class="token punctuation">,</span> json_str<span class="token punctuation">)</span>
</code></pre></div><p>JSON 编码的字符串转换回一个 Python 数据结构：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment">#!/usr/bin/python3</span>
<span class="token keyword">import</span> json
<span class="token comment"># Python 字典类型转换为 JSON 对象</span>
data1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;no&#39;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;name&#39;</span> <span class="token punctuation">:</span> <span class="token string">&#39;W3CSchool&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;url&#39;</span> <span class="token punctuation">:</span> <span class="token string">&#39;http://www.w3cschool.cn&#39;</span>
<span class="token punctuation">}</span>
json_str <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data1<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;Python 原始数据：&quot;</span><span class="token punctuation">,</span> <span class="token builtin">repr</span><span class="token punctuation">(</span>data1<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;JSON 对象：&quot;</span><span class="token punctuation">,</span> json_str<span class="token punctuation">)</span>
<span class="token comment"># 将 JSON 对象转换为 Python 字典</span>
data2 <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>json_str<span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;data2[&#39;name&#39;]: &quot;</span><span class="token punctuation">,</span> data2<span class="token punctuation">[</span><span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">&quot;data2[&#39;url&#39;]: &quot;</span><span class="token punctuation">,</span> data2<span class="token punctuation">[</span><span class="token string">&#39;url&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="文件操作" tabindex="-1"><a class="header-anchor" href="#文件操作" aria-hidden="true">#</a> 文件操作</h2><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># 写入 JSON 数据</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;w&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span> f<span class="token punctuation">)</span>
<span class="token comment"># 读取数据</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;data.json&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    data <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>
</code></pre></div>`,14),o=[p];function c(l,r){return t(),s("div",null,o)}const u=n(e,[["render",c],["__file","json.html.vue"]]);export{u as default};
