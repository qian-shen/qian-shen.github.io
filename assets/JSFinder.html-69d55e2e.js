import{_ as n,p as t,q as r,s as a,R as e,t as l,Z as o,n as p}from"./framework-47a2e622.js";const c={},i=a("h2",{id:"简介",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#简介","aria-hidden":"true"},"#"),e(" 简介")],-1),d=a("p",null,"JSFinder 是一款用作快速在网站的 JS 文件中提取 URL，子域名的工具。",-1),h=a("h2",{id:"下载",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#下载","aria-hidden":"true"},"#"),e(" 下载")],-1),u={href:"https://github.com/Threezh1/JSFinder",target:"_blank",rel:"noopener noreferrer"},m=o(`<h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><ul><li>简单爬取</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-u</span> http://www.example.com
</code></pre></div><p>这个命令会爬取 <mark>http://www.example.com</mark> 这单个页面的所有的 JS 链接，并在其中发现 URL 和子域名。</p><ul><li>深度爬取</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-u</span> http://www.example.com <span class="token parameter variable">-d</span>
</code></pre></div><blockquote><p>深入一层页面爬取 JS，时间会消耗的更长。</p></blockquote><p>建议使用 -ou 和 -os 来指定保存 URL 和子域名的文件名。例如：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-u</span> http://www.example.com <span class="token parameter variable">-d</span> <span class="token parameter variable">-ou</span> example_url.txt <span class="token parameter variable">-os</span> example_subdomain.txt <span class="token comment"># -ou 保存的 URL 文件，-os 保存的域名文件。</span>
</code></pre></div><ul><li>批量爬取</li></ul><p>指定 URL：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-f</span> text.txt
</code></pre></div><p>指定 JS：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-f</span> text.txt <span class="token parameter variable">-j</span>
</code></pre></div><p>指定 cookie：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>python JSFinder.py <span class="token parameter variable">-u</span> http://www.example.com <span class="token parameter variable">-c</span> <span class="token string">&quot;session=xxx&quot;</span>
</code></pre></div>`,16),x=a("div",{class:"custom-container warning"},[a("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},[a("g",{fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},[a("circle",{cx:"12",cy:"12",r:"9"}),a("path",{d:"M12 8v4"}),a("path",{d:"M12 16h.01"})])]),a("p",{class:"custom-container-title"},"注意"),a("ul",null,[a("li",null,"URL 不需要加引号。"),a("li",null,"指定 JS 文件的时候，返回的 URL 为相对 URL。"),a("li",null,"指定 URL 文件爬取的时候，返回的相对 URL 都会以指定的第一个链接的域名作为其域名来转化为绝对 URL。")])],-1);function g(b,v){const s=p("ExternalLinkIcon");return t(),r("div",null,[i,d,h,a("p",null,[a("a",u,[e("https://github.com/Threezh1/JSFinder"),l(s)])]),m,x])}const _=n(c,[["render",g],["__file","JSFinder.html.vue"]]);export{_ as default};
