import{_ as n,p as s,q as a,Z as p}from"./framework-47a2e622.js";const t={},o=p(`<h2 id="主机存活探测" tabindex="-1"><a class="header-anchor" href="#主机存活探测" aria-hidden="true">#</a> 主机存活探测</h2><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> random <span class="token keyword">import</span> randint
<span class="token keyword">from</span> scapy<span class="token punctuation">.</span>layers<span class="token punctuation">.</span>inet <span class="token keyword">import</span> IP<span class="token punctuation">,</span> ICMP
<span class="token keyword">from</span> scapy<span class="token punctuation">.</span>sendrecv <span class="token keyword">import</span> sr<span class="token punctuation">,</span> sr1
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> math
<span class="token keyword">import</span> threading
<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-i&quot;</span><span class="token punctuation">,</span>dest<span class="token operator">=</span><span class="token string">&quot;IP&quot;</span><span class="token punctuation">,</span>metavar<span class="token operator">=</span><span class="token string">&quot;destip&quot;</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token string">&quot;127.0.0.1&quot;</span><span class="token punctuation">,</span><span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;choose your test ip&quot;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&quot;-t&quot;</span><span class="token punctuation">,</span>dest<span class="token operator">=</span><span class="token string">&quot;threads&quot;</span><span class="token punctuation">,</span>metavar<span class="token operator">=</span><span class="token string">&quot;threads&quot;</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">,</span>default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;choose your numbers of threads&quot;</span><span class="token punctuation">)</span>
    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    scanthreads<span class="token punctuation">(</span>args<span class="token punctuation">.</span>IP<span class="token punctuation">,</span>args<span class="token punctuation">.</span>threads<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">scanthreads</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span>threads<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token string">&#39;-&#39;</span> <span class="token keyword">in</span> IP<span class="token punctuation">:</span>
        num <span class="token operator">=</span> <span class="token number">0</span>
        result_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        threads_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        temp_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        threads <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>threads<span class="token punctuation">)</span>
        ip_numbers <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>
        one_thread_num <span class="token operator">=</span> math<span class="token punctuation">.</span>ceil<span class="token punctuation">(</span>ip_numbers <span class="token operator">/</span> threads<span class="token punctuation">)</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>temp_list<span class="token punctuation">)</span> <span class="token operator">==</span> one_thread_num<span class="token punctuation">:</span>
                temp_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
                result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp_list<span class="token punctuation">)</span>
                temp_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
            <span class="token keyword">elif</span> num <span class="token operator">==</span> ip_numbers<span class="token punctuation">:</span>
                result_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp_list<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                temp_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
            num <span class="token operator">=</span> num <span class="token operator">+</span> <span class="token number">1</span>
        <span class="token keyword">for</span> iptail <span class="token keyword">in</span> result_list<span class="token punctuation">:</span>
            threads_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span>threading<span class="token punctuation">.</span>Thread<span class="token punctuation">(</span>target<span class="token operator">=</span>ipcheck<span class="token punctuation">,</span> args<span class="token operator">=</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span> iptail<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> t <span class="token keyword">in</span> threads_list<span class="token punctuation">:</span>
            t<span class="token punctuation">.</span>start<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        lookforip<span class="token punctuation">(</span>IP<span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">ipcheck</span><span class="token punctuation">(</span>IP<span class="token punctuation">,</span>ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> ip<span class="token punctuation">:</span>
        lookforip<span class="token punctuation">(</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;.&#39;</span><span class="token operator">+</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;.&#39;</span><span class="token operator">+</span>IP<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&#39;.&#39;</span><span class="token operator">+</span><span class="token builtin">str</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">lookforip</span><span class="token punctuation">(</span>ip<span class="token punctuation">)</span><span class="token punctuation">:</span>
    ip_id <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>
    icmp_id <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>
    icmp_seq <span class="token operator">=</span> randint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">65535</span><span class="token punctuation">)</span>
    packet <span class="token operator">=</span> IP<span class="token punctuation">(</span>dst<span class="token operator">=</span>ip<span class="token punctuation">,</span> ttl<span class="token operator">=</span><span class="token number">64</span><span class="token punctuation">,</span> <span class="token builtin">id</span><span class="token operator">=</span>ip_id<span class="token punctuation">)</span> <span class="token operator">/</span> ICMP<span class="token punctuation">(</span><span class="token builtin">id</span><span class="token operator">=</span>icmp_id<span class="token punctuation">,</span> seq<span class="token operator">=</span>icmp_seq<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token string">b&#39;rootkit&#39;</span>
    result <span class="token operator">=</span> sr1<span class="token punctuation">(</span>packet<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> verbose<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> result<span class="token punctuation">:</span>
        <span class="token keyword">for</span> rcv <span class="token keyword">in</span> result<span class="token punctuation">:</span>
            scan_ip <span class="token operator">=</span> rcv<span class="token punctuation">[</span>IP<span class="token punctuation">]</span><span class="token punctuation">.</span>src
            <span class="token keyword">print</span><span class="token punctuation">(</span>scan_ip <span class="token operator">+</span> <span class="token string">&#39;---&gt;&#39;</span> <span class="token string">&#39;Host is up&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>ip <span class="token operator">+</span> <span class="token string">&#39;---&gt;&#39;</span> <span class="token string">&#39;host is down&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        main<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span> KeyboardInterrupt<span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;interrupted by user, killing all threads...&quot;</span><span class="token punctuation">)</span>
</code></pre></div>`,2),e=[o];function c(u,l){return s(),a("div",null,e)}const i=n(t,[["render",c],["__file","hostScan.html.vue"]]);export{i as default};
