import{_ as n,p as s,q as a,Z as t}from"./framework-6ecfbe9e.js";const p={},o=t(`<h2 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h2><p>PHP 支持以下几种数据类型：</p><ul><li>String（字符串）</li><li>Integer（整型）</li><li>Float（浮点型）</li><li>Boolean（布尔型）</li><li>Array（数组）</li><li>Object（对象）</li><li>NULL（空值）</li><li>Resource（资源类型）</li></ul><p>PHP<code>var_dump()</code>函数返回变量的数据类型和值：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
	<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">5985</span><span class="token punctuation">;</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span> 
	<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">345</span><span class="token punctuation">;</span> <span class="token comment">// 负数 </span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span> 
	<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">0x8C</span><span class="token punctuation">;</span> <span class="token comment">// 十六进制数</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
	<span class="token variable">$x</span> <span class="token operator">=</span> <span class="token number">047</span><span class="token punctuation">;</span> <span class="token comment">// 八进制数</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h3 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h3><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> 
	<span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h3 id="对象" tabindex="-1"><a class="header-anchor" href="#对象" aria-hidden="true">#</a> 对象</h3><p>在 PHP 中，对象必须声明，对象使用关键字<code>class</code>声明，然后我们在类中定义数据类型，然后在实例化的类中使用数据类型：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token keyword">class</span> <span class="token class-name-definition class-name">Car</span>
	<span class="token punctuation">{</span>
		<span class="token keyword">var</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
		<span class="token keyword">function</span> <span class="token function-definition function">__construct</span><span class="token punctuation">(</span><span class="token variable">$color</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;green&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">color</span> <span class="token operator">=</span> <span class="token variable">$color</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">function</span> <span class="token function-definition function">what_color</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">color</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><p>关键字<code>this</code>就是指向当前对象实例的指针，不指向任何其他对象或类。</p><h3 id="资源类型" tabindex="-1"><a class="header-anchor" href="#资源类型" aria-hidden="true">#</a> 资源类型</h3><p>PHP 资源 resource 是一种特殊变量，保存了到外部资源的一个引用。常见资源数据类型有打开文件、数据库连接、图形画布区域等。使用<code>get_resource_type()</code>函数可以返回资源（resource）类型：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token function">get_resource_type</span><span class="token punctuation">(</span><span class="token class-name type-declaration">resource</span> <span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword return-type">string</span>
</code></pre></div><p>此函数返回一个字符串，用于表示传递给它的 resource 的类型。如果参数不是合法的 resource，将产生错误。</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$c</span> <span class="token operator">=</span> <span class="token function">mysql_connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token function">get_resource_type</span><span class="token punctuation">(</span><span class="token variable">$c</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 打印：mysql link</span>
	
	<span class="token variable">$fp</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;foo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token function">get_resource_type</span><span class="token punctuation">(</span><span class="token variable">$fp</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 打印：file</span>
	
	<span class="token variable">$doc</span> <span class="token operator">=</span> <span class="token function">new_xmldoc</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;1.0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token function">get_resource_type</span><span class="token punctuation">(</span><span class="token variable">$doc</span><span class="token operator">-&gt;</span><span class="token property">doc</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string double-quoted-string">&quot;\\n&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// 打印：domxml document</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h2 id="数组-1" tabindex="-1"><a class="header-anchor" href="#数组-1" aria-hidden="true">#</a> 数组</h2><h3 id="创建数组" tabindex="-1"><a class="header-anchor" href="#创建数组" aria-hidden="true">#</a> 创建数组</h3><p>在 PHP 中，使用<code>array()</code>函数用于创建数组：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token comment"># 自动分配 ID 键</span>
<span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 手动分配 ID 键</span>
<span class="token variable">$cars</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$cars</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$cars</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="获取长度" tabindex="-1"><a class="header-anchor" href="#获取长度" aria-hidden="true">#</a> 获取长度</h3><p><code>count()</code>函数用于返回数组的长度（元素的数量）：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h3 id="遍历数组" tabindex="-1"><a class="header-anchor" href="#遍历数组" aria-hidden="true">#</a> 遍历数组</h3><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$cars</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Volvo&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;BMW&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Toyota&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token variable">$arrlength</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	 
	<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$x</span> <span class="token operator">&lt;</span> <span class="token variable">$arrlength</span><span class="token punctuation">;</span> <span class="token variable">$x</span><span class="token operator">++</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">echo</span> <span class="token variable">$cars</span><span class="token punctuation">[</span><span class="token variable">$x</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h3 id="关联数组" tabindex="-1"><a class="header-anchor" href="#关联数组" aria-hidden="true">#</a> 关联数组</h3><p>关联数组是分配给数组的指定的键的数组。</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token comment"># 创建关联数组第一种方式</span>
<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment"># 创建关联数组第二种方式</span>
<span class="token variable">$age</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Peter&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$age</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Ben&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">;</span>
<span class="token variable">$age</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Joe&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">;</span>
</code></pre></div><p>可以在脚本中使用该键：</p><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span><span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Peter is &quot;</span> <span class="token operator">.</span> <span class="token variable">$age</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Peter&#39;</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot; years old.&quot;</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h4 id="遍历关联数组" tabindex="-1"><a class="header-anchor" href="#遍历关联数组" aria-hidden="true">#</a> 遍历关联数组</h4><div class="language-php" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
	<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;Peter&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;35&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Ben&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;37&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;Joe&quot;</span><span class="token operator">=&gt;</span><span class="token string double-quoted-string">&quot;43&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	 
	<span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$age</span> <span class="token keyword">as</span> <span class="token variable">$x</span> <span class="token operator">=&gt;</span> <span class="token variable">$x_value</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
	    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;Key=&quot;</span> <span class="token operator">.</span> <span class="token variable">$x</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;, Value=&quot;</span> <span class="token operator">.</span> <span class="token variable">$x_value</span><span class="token punctuation">;</span>
	    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;br&gt;&quot;</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div><h2 id="超级全局变量" tabindex="-1"><a class="header-anchor" href="#超级全局变量" aria-hidden="true">#</a> 超级全局变量</h2><p>PHP 中预定义了几个超级全局变量（superglobals） ，这意味着它们在一个脚本的全部作用域中都可用。 你不需要特别说明，就可以在函数及类中使用。</p><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul>`,35),e=[o];function c(l,u){return s(),a("div",null,e)}const i=n(p,[["render",c],["__file","type.html.vue"]]);export{i as default};
